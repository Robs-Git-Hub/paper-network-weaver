var de=Object.defineProperty;var he=(x,w,k)=>w in x?de(x,w,{enumerable:!0,configurable:!0,writable:!0,value:k}):x[w]=k;var H=(x,w,k)=>he(x,typeof w!="symbol"?w+"":w,k);(function(){"use strict";var x={compareTwoStrings:w,findBestMatch:k};function w(e,t){if(e=e.replace(/\s+/g,""),t=t.replace(/\s+/g,""),e===t)return 1;if(e.length<2||t.length<2)return 0;let o=new Map;for(let s=0;s<e.length-1;s++){const n=e.substring(s,s+2),a=o.has(n)?o.get(n)+1:1;o.set(n,a)}let r=0;for(let s=0;s<t.length-1;s++){const n=t.substring(s,s+2),a=o.has(n)?o.get(n):0;a>0&&(o.set(n,a-1),r++)}return 2*r/(e.length+t.length-2)}function k(e,t){if(!q(e,t))throw new Error("Bad arguments: First argument should be a string, second should be an array of strings");const o=[];let r=0;for(let n=0;n<t.length;n++){const a=t[n],h=w(e,a);o.push({target:a,rating:h}),h>o[r].rating&&(r=n)}const s=o[r];return{ratings:o,bestMatch:s,bestMatchIndex:r}}function q(e,t){return!(typeof e!="string"||!Array.isArray(t)||!t.length||t.find(function(o){return typeof o!="string"}))}function M(e){if(!e||typeof e!="object")return null;const t=[];try{for(const o in e){const r=e[o];for(const s of r)t[s]=o}return t.join(" ")}catch(o){return console.error("Failed to reconstruct abstract",o),null}}function E(e){return e?e.map(t=>t.display_name):[]}function P(e){if(!e)return null;const t=/(?:https?:\/\/doi\.org\/)?(10\..+)/,o=e.match(t);return o?o[1]:e}function G(e,t){if(!e||!t)return 0;const o=e.toLowerCase().replace(/\./g,"").trim(),r=t.toLowerCase().replace(/\./g,"").trim();if(o===r)return 1;const s=o.split(" ").filter(i=>i.length>0),n=r.split(" ").filter(i=>i.length>0);if(s.length===0||n.length===0)return 0;const a=s[s.length-1],h=n[n.length-1];if(x.compareTwoStrings(a,h)<.9)return 0;let c=x.compareTwoStrings(o,r);return s.length>1&&s[0].length===1&&n.length>1&&n[0].length>1&&s[0]===n[0][0]&&(c=Math.min(1,c*1.15)),c}function S(){return Math.random().toString(36).substr(2,9)}async function U(e,t=!1,o,r,s,n,a,h,_){var p,l,g,d;if(e.doi){const u=P(e.doi);if(u){const f=_("doi",u);if(f)return f}}if(e.id){const u=_("openalex",e.id);if(u)return u}const c=S(),i={short_uid:c,title:e.title||e.display_name||"Untitled",publication_year:e.publication_year||null,publication_date:e.publication_date||null,location:((l=(p=e.primary_location)==null?void 0:p.source)==null?void 0:l.display_name)||null,abstract:M(e.abstract_inverted_index),fwci:e.fwci||null,cited_by_count:e.cited_by_count||0,type:e.type||"article",language:e.language||null,keywords:E(e.keywords),best_oa_url:((g=e.open_access)==null?void 0:g.oa_url)||null,oa_status:((d=e.open_access)==null?void 0:d.oa_status)||null,is_stub:t,relationship_tags:[]};if(o[c]=i,e.id&&h("openalex",e.id,c),e.doi){const u=P(e.doi);u&&h("doi",u,c)}if(e.authorships)for(let u=0;u<e.authorships.length;u++){const f=e.authorships[u],y=await B(f.author,t,r,s,n,a,h,_),b=`${c}_${y}`;if(n[b]={paper_short_uid:c,author_short_uid:y,author_position:u,is_corresponding:f.is_corresponding||!1,raw_author_name:f.raw_author_name||null,institution_uids:[]},f.institutions)for(const A of f.institutions){const W=await v(A,s,a,h,_);n[b].institution_uids.push(W)}}return c}async function B(e,t=!1,o,r,s,n,a,h){if(e.id){const i=h("openalex_author",e.id);if(i)return i}const _=S(),c={short_uid:_,clean_name:e.display_name||"Unknown Author",orcid:e.orcid||null,is_stub:t};return o[_]=c,e.id&&a("openalex_author",e.id,_),_}async function v(e,t,o,r,s){if(e.id){const h=s("openalex_institution",e.id);if(h)return h}const n=S(),a={short_uid:n,ror_id:e.ror||null,display_name:e.display_name||"Unknown Institution",country_code:e.country_code||null,type:e.type||null};return t[n]=a,e.id&&r("openalex_institution",e.id,n),n}async function I(e,t=5){const o=[429,500,502,503,504];for(let r=0;r<t;r++)try{console.log(`[API] Attempt ${r+1}/${t} for: ${e}`);const s=await fetch(e);if(s.ok)return console.log(`[API] Success on attempt ${r+1}: Status ${s.status}`),s;if(s.status===404)return console.warn(`[API] Resource not found (404), continuing gracefully: ${e}`),s;if(!o.includes(s.status))throw console.error(`[API] Fatal error: Status ${s.status} for ${e}`),new Error(`Fatal API Error: Status ${s.status} for ${e}`);if(r===t-1)throw console.error(`[API] Failed after ${t} attempts with status ${s.status}`),new Error(`API continued to fail after ${t} attempts with status ${s.status}`);const n=Math.pow(2,r)*1e3+Math.random()*1e3;console.log(`[API] Retryable error ${s.status}. Retrying in ${n.toFixed(0)}ms...`),await new Promise(a=>setTimeout(a,n))}catch(s){if(console.error(`[API] Network error during fetch attempt ${r+1}:`,s),r===t-1)throw s;const n=Math.pow(2,r)*1e3;await new Promise(a=>setTimeout(a,n))}throw new Error(`Failed to fetch from ${e} after ${t} attempts.`)}async function V(e,t,o){console.log("[Worker] Phase A, Step 2: Fetching 1st degree citations from OpenAlex."),o.postMessage("progress/update",{message:"Fetching 1st degree citations..."});const r=l=>l?l.replace("https://openalex.org/",""):"",n=`https://api.openalex.org/works?filter=cites:${r(e)}&per-page=200&select=id,title,display_name,publication_year,publication_date,primary_location,abstract_inverted_index,fwci,cited_by_count,type,language,keywords,open_access,authorships,referenced_works,related_works`,a=await I(n);if(!a.ok)throw new Error(`Failed to fetch citations: ${a.status}`);const h=await a.json(),_={},c={};for(const l of h.results){l.id&&(l.id=r(l.id));const g=await U(l,!1,t.papers,t.authors,t.institutions,t.authorships,t.externalIdIndex,o.addToExternalIndex,o.findByExternalId);if(t.papers[g]&&(t.papers[g].relationship_tags.includes("1st_degree")||t.papers[g].relationship_tags.push("1st_degree")),t.paperRelationships.push({source_short_uid:g,target_short_uid:t.masterPaperUid,relationship_type:"cites"}),l.referenced_works)for(const d of l.referenced_works){const u=r(d);u&&(_[u]=(_[u]||0)+1)}if(l.related_works)for(const d of l.related_works){const u=r(d);u&&(c[u]=(c[u]||0)+1)}}const i=Object.entries(_).filter(([l,g])=>g>=t.stubCreationThreshold).map(([l,g])=>l),p=Object.entries(c).filter(([l,g])=>g>=t.stubCreationThreshold).map(([l,g])=>l);i.length>0&&await F(i,"cites",t,o,"referenced_by_1st_degree"),p.length>0&&await F(p,"similar",t,o,"similar"),console.log(`[Worker] Phase A, Step 2: Processed ${h.results.length} citations, found ${i.length} referenced_by_1st_degree stubs and ${p.length} frequent similar stubs.`)}async function F(e,t,o,r,s){if(e.length===0)return;const n=`https://api.openalex.org/works?filter=openalex:${e.join("|")}&select=id,title,display_name,publication_year,publication_date,primary_location,cited_by_count,type,authorships`,a=await I(n);if(!a.ok){console.warn(`[Worker] Could not fetch stubs for ${t}. Status: ${a.status}`);return}const h=await a.json();for(const _ of h.results){const c=await U(_,!0,o.papers,o.authors,o.institutions,o.authorships,o.externalIdIndex,r.addToExternalIndex,r.findByExternalId);s&&o.papers[c]&&(o.papers[c].relationship_tags.includes(s)||o.papers[c].relationship_tags.push(s));const i={source_short_uid:o.masterPaperUid,target_short_uid:c,relationship_type:t};s&&(i.tag=s),o.paperRelationships.push(i)}}async function J(e,t){console.log("[Worker] Phase C, Step 8: Fetching 2nd degree citations."),t.postMessage("progress/update",{message:"Fetching 2nd degree citations..."});const o=e.paperRelationships.filter(s=>s.relationship_type==="cites"&&s.target_short_uid===e.masterPaperUid);if(o.length===0){console.log("[Worker] No 1st degree citations found, skipping 2nd degree fetch.");return}const r=[];for(const s of o){const n=Object.keys(e.externalIdIndex).find(a=>a.startsWith("openalex:")&&e.externalIdIndex[a]===s.source_short_uid);if(n){const a=n.split("openalex:")[1];r.push(a)}}if(r.length===0){console.log("[Worker] No OpenAlex IDs found for 1st degree citations.");return}try{const s=`https://api.openalex.org/works?filter=cites:${r.join("|")}&per-page=200&select=id,title,display_name,publication_year,publication_date,primary_location,abstract_inverted_index,fwci,cited_by_count,type,language,keywords,open_access,authorships`,n=await I(s);if(!n.ok){console.warn(`[Worker] Failed to fetch 2nd degree citations: ${n.status}`);return}const a=await n.json();console.log(`[Worker] Found ${a.results.length} 2nd degree citations.`);const h={},_={},c={},i={},p=[];for(const l of a.results){if(l.id&&(l.id=l.id.replace("https://openalex.org/","")),t.findByExternalId("openalex",l.id))continue;const d=await U(l,!1,e.papers,e.authors,e.institutions,e.authorships,e.externalIdIndex,t.addToExternalIndex,t.findByExternalId);if(e.papers[d]&&(e.papers[d].relationship_tags.includes("2nd_degree")||e.papers[d].relationship_tags.push("2nd_degree")),h[d]=e.papers[d],l.referenced_works)for(const u of l.referenced_works){const f=u.replace("https://openalex.org/","");if(r.includes(f)){const y=t.findByExternalId("openalex",f);y&&p.push({source_short_uid:d,target_short_uid:y,relationship_type:"cites"})}}Object.entries(e.authorships).forEach(([u,f])=>{f.paper_short_uid===d&&(i[u]=f,e.authors[f.author_short_uid]&&(_[f.author_short_uid]=e.authors[f.author_short_uid]))}),Object.values(i).forEach(u=>{u.institution_uids.forEach(f=>{e.institutions[f]&&(c[f]=e.institutions[f])})})}e.paperRelationships.push(...p),Object.keys(h).length>0&&t.postMessage("graph/addNodes",{data:{papers:h,authors:_,institutions:c,authorships:i,paper_relationships:p}}),console.log(`[Worker] Added ${Object.keys(h).length} new 2nd degree citation papers.`)}catch(s){console.warn("[Worker] Error fetching 2nd degree citations:",s)}}async function Q(e,t){var n,a,h,_;console.log("[Worker] Phase C, Step 9: Hydrating stub papers."),t.postMessage("progress/update",{message:"Hydrating stub papers..."});const o=Object.values(e.papers).filter(c=>c.is_stub);if(o.length===0){console.log("[Worker] No stub papers to hydrate.");return}const r=[],s={};for(const c of o){const i=Object.keys(e.externalIdIndex).find(p=>p.startsWith("openalex:")&&e.externalIdIndex[p]===c.short_uid);if(i){const p=i.split("openalex:")[1];r.push(p),s[c.short_uid]=p}}if(r.length===0){console.log("[Worker] No OpenAlex IDs found for stub papers.");return}try{const c=`https://api.openalex.org/works?filter=openalex:${r.join("|")}&select=id,title,display_name,publication_year,publication_date,primary_location,abstract_inverted_index,fwci,cited_by_count,type,language,keywords,open_access,authorships`,i=await I(c);if(!i.ok){console.warn(`[Worker] Failed to hydrate stub papers: ${i.status}`);return}const p=await i.json();console.log(`[Worker] Hydrating ${p.results.length} stub papers.`);for(const l of p.results){const g=l.id.replace("https://openalex.org/",""),d=Object.keys(s).find(f=>s[f]===g);if(!d||!e.papers[d])continue;const u={...e.papers[d],title:l.title||l.display_name||e.papers[d].title,publication_year:l.publication_year||e.papers[d].publication_year,publication_date:l.publication_date||e.papers[d].publication_date,location:((a=(n=l.primary_location)==null?void 0:n.source)==null?void 0:a.display_name)||e.papers[d].location,abstract:M(l.abstract_inverted_index)||e.papers[d].abstract,fwci:l.fwci||e.papers[d].fwci,cited_by_count:l.cited_by_count||e.papers[d].cited_by_count,type:l.type||e.papers[d].type,language:l.language||e.papers[d].language,keywords:E(l.keywords)||e.papers[d].keywords,best_oa_url:((h=l.open_access)==null?void 0:h.oa_url)||e.papers[d].best_oa_url,oa_status:((_=l.open_access)==null?void 0:_.oa_status)||e.papers[d].oa_status,is_stub:!1};if(e.papers[d]=u,t.postMessage("papers/updateOne",{id:d,changes:u}),l.authorships)for(let f=0;f<l.authorships.length;f++){const y=l.authorships[f],b=await B(y.author,!1,e.authors,e.institutions,e.authorships,e.externalIdIndex,t.addToExternalIndex,t.findByExternalId),A=`${d}_${b}`,W={paper_short_uid:d,author_short_uid:b,author_position:f,is_corresponding:!1,raw_author_name:y.raw_author_name||null,institution_uids:[]};if(y.institutions)for(const ue of y.institutions){const pe=await v(ue,e.institutions,e.externalIdIndex,t.addToExternalIndex,t.findByExternalId);W.institution_uids.push(pe)}e.authorships[A]=W}}console.log(`[Worker] Successfully hydrated ${p.results.length} stub papers.`)}catch(c){console.warn("[Worker] Error hydrating stub papers:",c)}}async function X(e,t){var n,a,h,_;if(!e.masterPaperUid)return;const o=e.papers[e.masterPaperUid];if(!o)return;const r=Object.keys(e.externalIdIndex).find(c=>c.startsWith("openalex:")&&e.externalIdIndex[c]===e.masterPaperUid);if(!r)return;const s=r.split("openalex:")[1];try{console.log("[Worker] Phase B, Step 4: Hydrating Master Paper from OpenAlex."),t.postMessage("progress/update",{message:"Enriching master paper..."});const c=`https://api.openalex.org/works/${s}?select=id,title,display_name,publication_year,publication_date,primary_location,abstract_inverted_index,fwci,cited_by_count,type,language,keywords,open_access,authorships`,i=await I(c);if(!i.ok)return;const p=await i.json(),l={...o,title:p.title||p.display_name||o.title,publication_year:p.publication_year||o.publication_year,publication_date:p.publication_date||o.publication_date,location:((a=(n=p.primary_location)==null?void 0:n.source)==null?void 0:a.display_name)||o.location,abstract:M(p.abstract_inverted_index)||o.abstract,fwci:p.fwci||o.fwci,cited_by_count:p.cited_by_count||o.cited_by_count,type:p.type||o.type,language:p.language||o.language,keywords:E(p.keywords)||o.keywords,best_oa_url:((h=p.open_access)==null?void 0:h.oa_url)||o.best_oa_url,oa_status:((_=p.open_access)==null?void 0:_.oa_status)||o.oa_status,is_stub:!1};e.papers[e.masterPaperUid]=l,t.postMessage("papers/updateOne",{id:e.masterPaperUid,changes:l}),console.log("[Worker] Phase B, Step 4: Master Paper hydration complete.")}catch(c){console.warn("[Worker] Master paper hydration failed:",c)}}async function Y(e,t,o){if(e.citations)for(const r of e.citations){const s=await C(r,!0,t,o);s&&t.paperRelationships.push({source_short_uid:s,target_short_uid:t.masterPaperUid,relationship_type:"cites"})}if(e.references)for(const r of e.references){const s=await C(r,!0,t,o);s&&t.paperRelationships.push({source_short_uid:t.masterPaperUid,target_short_uid:s,relationship_type:"cites"})}}async function C(e,t=!0,o,r){var a,h,_;if((a=e.externalIds)!=null&&a.DOI){const c=P(e.externalIds.DOI);if(c){const i=r.findByExternalId("doi",c);if(i)return i}}if(e.paperId){const c=r.findByExternalId("ss",e.paperId);if(c)return c}const s=S(),n={short_uid:s,title:e.title||"Untitled",publication_year:e.year||null,publication_date:null,location:e.venue||null,abstract:e.abstract||null,fwci:null,cited_by_count:e.citationCount||0,type:"article",language:null,keywords:[],best_oa_url:((h=e.openAccessPdf)==null?void 0:h.url)||null,oa_status:null,is_stub:t,relationship_tags:[]};if(o.papers[s]=n,e.paperId&&r.addToExternalIndex("ss",e.paperId,s),(_=e.externalIds)!=null&&_.DOI){const c=P(e.externalIds.DOI);c&&r.addToExternalIndex("doi",c,s)}if(e.authors)for(let c=0;c<e.authors.length;c++){const i=e.authors[c],p=await Z(i,o,r),l=`${s}_${p}`;o.authorships[l]={paper_short_uid:s,author_short_uid:p,author_position:c,is_corresponding:!1,raw_author_name:i.name||null,institution_uids:[]}}return s}async function Z(e,t,o){if(e.authorId){const n=o.findByExternalId("ss_author",e.authorId);if(n)return n}const r=S(),s={short_uid:r,clean_name:e.name||"Unknown Author",orcid:null,is_stub:!0};return t.authors[r]=s,e.authorId&&o.addToExternalIndex("ss_author",e.authorId,r),r}class D{constructor(){H(this,"baseUrl","https://api.semanticscholar.org/graph/v1")}async fetchPaperDetails(t){const o=`${this.baseUrl}/paper/DOI:${t}?fields=paperId,corpusId,externalIds,url,citationStyles,citationCount,citations,citations.externalIds,citations.url,citations.title,citations.abstract,citations.venue,citations.year,citations.citationStyles,citations.authors,references,references.externalIds,references.url,references.title,references.abstract,references.venue,references.year,references.citationStyles,references.authors`;console.log("Semantic Scholar URL:",o);const r=await I(o);if(r.status===404)return console.warn(`Paper with DOI ${t} not found in Semantic Scholar, continuing gracefully`),null;if(!r.ok)throw new Error(`Semantic Scholar API error: ${r.status} ${r.statusText}`);const s=await r.json();return console.log("Semantic Scholar response:",s),s}}const ee=new D;async function te(e,t,o,r,s,n){var c;if(!o)return;const a=e[o];if(!a)return;const h=Object.keys(t).find(i=>i.startsWith("doi:")&&t[i]===o);if(!h){console.warn("[Worker] Phase A, Step 3: Skipped Semantic Scholar enrichment, no DOI found for Master Paper.");return}console.log("[Worker] Phase A, Step 3: Enriching with Semantic Scholar data.");const _=h.split("doi:")[1];try{const i=await ee.fetchPaperDetails(_);if(!i)return;const p={};!a.best_oa_url&&((c=i.openAccessPdf)!=null&&c.url)&&(p.best_oa_url=i.openAccessPdf.url),Object.keys(p).length>0&&(e[o]={...a,...p}),i.paperId&&r("ss",i.paperId,o),i.corpusId&&r("corpusId",i.corpusId.toString(),o),await Y(i,s(),n())}catch(i){console.warn("[Worker] Semantic Scholar enrichment failed:",i)}}async function oe(e,t,o,r,s,n){console.log("[Worker] Phase B, Steps 5 & 6: Starting Author Reconciliation."),n("progress/update",{message:"Reconciling authors..."});const a=Object.values(t).filter(i=>i.is_stub);if(a.length===0){console.log("[Worker] Phase B, Steps 5 & 6: No stub authors to reconcile. Finishing enrichment."),n("app_status/update",{state:"active",message:null});return}const h=new Map;for(const i of a){const p=Object.values(o).filter(l=>l.author_short_uid===i.short_uid);for(const l of p){const g=e[l.paper_short_uid];if(!g)continue;const d=Object.keys(r).find(u=>u.startsWith("doi:")&&r[u]===g.short_uid);if(d){const u=d.split("doi:")[1];h.has(u)||h.set(u,[]),h.get(u).push({stubAuthor:i,authorship:l,paper:g})}}}if(h.size===0){console.log("[Worker] Phase B, Steps 5 & 6: No DOIs found for stub authors. Finishing enrichment."),n("app_status/update",{state:"active",message:null});return}const _=Array.from(h.keys()),c=[];try{const i=`https://api.openalex.org/works?filter=doi:${_.join("|")}&select=id,title,authorships`,p=await I(i);if(p.ok){const l=await p.json();for(const g of l.results){const d=P(g.doi);if(!d||!h.has(d))continue;const u=h.get(d);for(const f of u)for(const y of g.authorships||[]){const b=G(f.stubAuthor.clean_name,y.author.display_name);b>.85&&c.push({stubAuthor:f.stubAuthor,candidateAuthor:y.author,score:b,paper:f.paper})}}}}catch(i){console.warn("[Worker] Author reconciliation API call failed:",i)}if(c.length>0){const i=new Map;for(const d of c){const u=d.candidateAuthor.id;i.has(u)?i.get(u).loserUids.push(d.stubAuthor.short_uid):i.set(u,{winnerUid:d.stubAuthor.short_uid,loserUids:[],canonicalData:d.candidateAuthor})}const p=[],l=[],g=[];for(const[d,u]of i){p.push({id:u.winnerUid,changes:{clean_name:u.canonicalData.display_name,orcid:u.canonicalData.orcid||null,is_stub:!1}}),s("openalex_author",d,u.winnerUid);for(const f of u.loserUids){const y=Object.entries(o).filter(([b,A])=>A.author_short_uid===f);for(const[b,A]of y)l.push({id:b,changes:{author_short_uid:u.winnerUid}});g.push(f)}}n("graph/applyAuthorMerge",{updates:{authors:p,authorships:l},deletions:{authors:g}}),console.log(`[Worker] Phase B, Steps 5 & 6: Author reconciliation complete. Merged ${g.length} stub authors into ${i.size} canonical authors.`)}else console.log("[Worker] Phase B, Steps 5 & 6: No high-confidence author matches found.");n("app_status/update",{state:"active",message:null})}function re(e,t){self.postMessage({type:e,payload:t})}function se(e,t,o,r){const s=`${e}:${t}`;r[s]=o}function ne(e,t,o){const r=`${e}:${t}`;return o[r]||null}function $(e){return{postMessage:re,addToExternalIndex:(t,o,r)=>se(t,o,r,e),findByExternalId:(t,o)=>ne(t,o,e)}}let T={},R={},z={},N={},K=[],L={},O=null,j=3;function ie(){T={},R={},z={},N={},K=[],L={},O=null,j=3}function ae(e){O=e}function ce(e){j=e}function m(){return{papers:T,authors:R,institutions:z,authorships:N,paperRelationships:K,externalIdIndex:L,masterPaperUid:O,stubCreationThreshold:j}}function le(){self.addEventListener("message",e=>{const{type:t,payload:o}=e.data;switch(t){case"graph/processMasterPaper":(async()=>{try{console.log("--- [Worker] Received 'graph/processMasterPaper'. Starting Phase A. ---"),ie();const r=m();ce(o.stub_creation_threshold||3);const s=$(r.externalIdIndex);s.postMessage("app_status/update",{state:"loading",message:"Processing master paper..."}),console.log("[Worker] Phase A, Step 1: Processing Master Paper.");const n=await U(o.paper,!1,r.papers,r.authors,r.institutions,r.authorships,r.externalIdIndex,s.addToExternalIndex,s.findByExternalId);ae(n),console.log("[Worker] Phase A, Step 1: Master Paper processed."),o.paper.id&&(await V(o.paper.id,m(),s),await te(r.papers,r.externalIdIndex,r.masterPaperUid,s.addToExternalIndex,m,()=>s)),console.log("--- [Worker] Phase A Complete. Posting initial graph to main thread. ---");const a=m();s.postMessage("graph/setState",{data:{papers:a.papers,authors:a.authors,institutions:a.institutions,authorships:a.authorships,paper_relationships:a.paperRelationships,external_id_index:a.externalIdIndex}}),console.log("--- [Worker] Starting Phase B: Background Enrichment. ---"),s.postMessage("app_status/update",{state:"enriching",message:null}),await X(m(),s),await oe(a.papers,a.authors,a.authorships,a.externalIdIndex,s.addToExternalIndex,s.postMessage),console.log("--- [Worker] Phase B Complete. All enrichment finished. ---")}catch(r){console.error("[Worker] A fatal error occurred during graph build:",r),$(m().externalIdIndex).postMessage("error/fatal",{message:`Worker error: ${r instanceof Error?r.message:"Unknown error"}`})}})();break;case"graph/extend":console.log('--- [Worker] Received "graph/extend". Starting Phase C. ---'),(async()=>{try{const r=$(m().externalIdIndex);r.postMessage("app_status/update",{state:"extending",message:"Extending network..."}),await J(m(),r),await Q(m(),r),console.log("--- [Worker] Phase C Complete. Graph extension finished. ---"),r.postMessage("app_status/update",{state:"active",message:null})}catch(r){console.error("[Worker] Error during graph extension:",r),$(m().externalIdIndex).postMessage("error/fatal",{message:`Extension error: ${r instanceof Error?r.message:"Unknown error"}`})}})();break;default:console.warn("[Worker] Unknown message type:",t)}})}le()})();
